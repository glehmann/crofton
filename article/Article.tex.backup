%
% Complete documentation on the extended LaTeX markup used for Insight
% documentation is available in ``Documenting Insight'', which is part
% of the standard documentation for Insight.  It may be found online
% at:
%
%     http://www.itk.org/

\documentclass{InsightArticle}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  hyperref should be the last package to be loaded.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\usepackage[dvips,
bookmarks,
bookmarksopen,
backref,
colorlinks,linkcolor={blue},citecolor={blue},urlcolor={blue},
]{hyperref}
% to be able to use options in graphics
\usepackage{graphicx}
% for pseudo code
\usepackage{listings}
% subfigures
\usepackage{subfigure}


%  This is a template for Papers to the Insight Journal. 
%  It is comparable to a technical report format.

% The title should be descriptive enough for people to be able to find
% the relevant document. 
\title{Perimeter and surface estimation using the Crofton formula and the run-length encoding}

% Increment the release number whenever significant changes are made.
% The author and/or editor can define 'significant' however they like.
% \release{0.00}

% At minimum, give your name and an email address.  You can include a
% snail-mail address if you like.
\author{Ga\"etan Lehmann{$^1$} {\small{and}} David Legland{$^2$}}
\authoraddress{{$^1$}INRA, UMR 1198; ENVA; CNRS, FRE 2857, Biologie du D\'eveloppement et Reproduction, Jouy en Josas, F-78350, France.\\
{$^2$}INRA, XXX, France.}

\begin{document}
\maketitle

\ifhtml
\chapter*{Front Matter\label{front}}
\fi


\begin{abstract}
\noindent
Unlike the measure of the area in 2D or of the volume in 3D, the perimeter and the surface are not easily measurable in a discretized image.
In this article we describe a method based on the Crofton formula to measure those two parameters in a discritized image. The accuracy of
the method is discussed and tested on several known objects. An algorithm based on the run-length encoding of binary objects is presented
and compared to a brute force approach.
An implementation is provided and integrated in the LabelObject/LabelMap framework contributed earlier by the authors.
\end{abstract}

\tableofcontents

\section{la methode}

% blabla, formule de crofton, tout ça ;-)

% quelques idées de blabla:
% la formule de crofton
% les autres methodes connues
% la precision theorique en fonction de differents parametres

\subsection{Counting the intercepts}

The number of intercepts, required to use the method described earlier, can be efficiently computed by using the run-length encoding of
the binary objects.

\section{Implementation}

The implementation of this algorithm has been done in \verb$itk::ShapeLabelMapFilter$, which is already in charge of the computation of
several shape descriptors. The run-length encoding used in the \verb$itk::LabelObject$ representation is reused.
The implementation is N-dimensional and thus is usable for any image dimension. The most useful cases, 2D and 3D have been specialized
to provide a more accurate estimation by also using the diagonals -- 4 directions in 2D and 13 directions in 3D. In the 4D case and greater,
the diagonals are not used.

\subsection{N-Dimensional name}
The attribute is called {\em Perimeter} independently of the dimension of the image and is available in the \verb$itk::ShapeLabelObject$.

\subsection{Border management}

\subsection{Multithreading}

The architecture used in \verb$itk::ShapeLabelMapFilter$ use one thread per LabelObject. The implementation has been integrated in this
architecture, providing a multithreaded implementation as long as there are several LabelObject in the input LabelMap.

\subsection{Accuracy}

\subsection{Performance}

For comparison, we provide two implementations of the brute force algorithm -- one dedicated to a single binary object, and another for
several, labelized objects. The implementation for labelized objects is closer to the capabilities of the run-length encoding based
implementation.

\subsection{Usage}

The perimeter estimation is now turned on by default, but can still disabled with \verb$SetComputePerimeter(false)$ in
\verb$itk::ShapeLabelMapFilter$ if not needed. This should enhance the user experience, especially for the attributes non obviously derived
from the perimeter like the roundness.



\appendix



\bibliographystyle{plain}
\bibliography{InsightJournal}
\nocite{ITKSoftwareGuide}

\end{document}

